<Window x:Class="Logonaut.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:helpers="clr-namespace:Logonaut.UI.Helpers"
        xmlns:vm="clr-namespace:Logonaut.UI.ViewModels"
        xmlns:converters="clr-namespace:Logonaut.UI.Converters"
        xmlns:local="clr-namespace:Logonaut.UI"
        xmlns:controls="clr-namespace:Logonaut.UI.Controls"
        xmlns:views="clr-namespace:Logonaut.UI.Views" 
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        Title="Logonaut" Height="600" Width="900"
        Closing="Window_Closing"
        Style="{DynamicResource {x:Type Window}}">

    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="G" Command="{x:Static local:MainWindow.GoToLineBoxFocusCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="F" Command="{x:Static local:MainWindow.FocusSearchCommand}"/>
        <KeyBinding Key="F3" Command="{Binding NextSearchCommand}" />
        <KeyBinding Key="F3" Modifiers="Shift" Command="{Binding PreviousSearchCommand}" />
        <KeyBinding Key="F12" Command="{x:Static local:MainWindow.ToggleSimulatorConfigCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="Z" Command="{Binding UndoCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="Y" Command="{Binding RedoCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding OpenLogFileCommand}"/>
    </Window.InputBindings>

    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVis"/>
        <converters:StringToIntConverter x:Key="StringToIntConverter" />

        <Geometry x:Key="AnchorIconGeometry">M 100 12 A 8 8 0 1 1 99.9 12 M 93 28 H 107 V 129 H 92 Z M 50 40 H 150 V 53 H 50 Z M 100 125 C 73 119 57 104 50 87 M 100 125 C 126 121 142 105 150 87 M 44 80 L 57 86 L 48 95 Z M 143 86 L 157 80 L 151 96 Z</Geometry>

        <Style x:Key="AnchorToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Background" Value="{DynamicResource AnchorButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource AnchorButton.Static.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ToolTip" Value="Auto-scroll disabled. Click to enable."/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="BackgroundBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2"
                                SnapsToDevicePixels="True">
                            <Viewbox Stretch="Uniform"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Margin="2">
                                <Viewbox.RenderTransform>
                                    <TranslateTransform X="-2" />
                                </Viewbox.RenderTransform>
                                <Path x:Name="anchorPath"
                                    Data="{StaticResource AnchorIconGeometry}"
                                    Fill="{DynamicResource SecondaryTextBrush}"/>
                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="anchorPath" Property="Fill" Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource AnchorButton.Checked.Background}"/>
                            <Setter Property="ToolTip" Value="Auto-scroll enabled. Click to disable."/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource AnchorButton.MouseOver.Background}"/>
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type avalonEdit:TextEditor}" x:Key="TextEditorWithOverviewRulerStyle">
            <Setter Property="Foreground" Value="{DynamicResource EditorForegroundBrush}" />
            <Setter Property="Background" Value="{DynamicResource EditorBackgroundBrush}" />
            <Setter Property="FontFamily" Value="Consolas" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type avalonEdit:TextEditor}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />      <!-- Column 0: ScrollViewer -->
                                <ColumnDefinition Width="Auto" />   <!-- Column 1: Ruler + Button -->
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />      <!-- Row 0: Main Area (Ruler) -->
                                <RowDefinition Height="Auto" />   <!-- Row 1: Button Area -->
                            </Grid.RowDefinitions>

                            <ScrollViewer x:Name="PART_ScrollViewer"
                                          Grid.Column="0"
                                          Grid.Row="0"
                                          Grid.RowSpan="2"
                                          Focusable="False"
                                          CanContentScroll="True"
                                          VerticalScrollBarVisibility="Hidden"
                                          HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
                                          Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextArea}">
                            </ScrollViewer>

                            <helpers:OverviewRulerMargin
                                x:Name="OverviewRuler"
                                Grid.Column="1" Grid.Row="0" Width="18"
                                Background="{DynamicResource OverviewRuler.Background}"
                                BorderBrush="{DynamicResource OverviewRuler.BorderBrush}"
                                BorderThickness="1,0,0,0"
                                VerticalOffset="{Binding Path=VerticalOffset, ElementName=PART_ScrollViewer, Mode=OneWay}"
                                ViewportHeight="{Binding Path=ViewportHeight, ElementName=PART_ScrollViewer, Mode=OneWay}"
                                ExtentHeight="{Binding Path=ExtentHeight, ElementName=PART_ScrollViewer, Mode=OneWay}"
                                DocumentLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Document.TextLength, Mode=OneWay, FallbackValue=0}"
                                SearchMarkers="{Binding DataContext.SearchMarkers, RelativeSource={RelativeSource AncestorType=Window}, Mode=OneWay}"
                                SearchMarkerBrush="{DynamicResource OverviewRuler.SearchMarkerBrush}"
                                ThumbBrush="{DynamicResource OverviewRuler.ThumbBrush}"/>

                            <ToggleButton Style="{StaticResource AnchorToggleButtonStyle}"
                                          Grid.Column="1" Grid.Row="1"
                                          IsChecked="{Binding DataContext.IsAutoScrollEnabled, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}"
                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Margin="0,1,0,1" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:MainWindow.GoToLineBoxFocusCommand}"
                        Executed="GoToLineBoxFocus_Executed"
                        CanExecute="GoToLineBoxFocus_CanExecute"/>
         <CommandBinding Command="{x:Static local:MainWindow.FocusSearchCommand}"
                        Executed="FocusSearch_Executed"
                        CanExecute="FocusSearch_CanExecute"/>
         <CommandBinding Command="{x:Static local:MainWindow.ToggleSimulatorConfigCommand}"
                        Executed="ToggleSimulatorConfig_Executed"
                        CanExecute="ToggleSimulatorConfig_CanExecute"/>
    </Window.CommandBindings>

    <Grid> 
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- Menu -->
            <RowDefinition Height="*"/>    <!-- Main Content Area -->
            <RowDefinition Height="Auto"/> <!-- Status Bar -->
        </Grid.RowDefinitions>

        <!-- Menu (Row 0) -->
        <Menu Grid.Row="0">
            <MenuItem Header="_File">
                <MenuItem Header="Open Log File" Command="{Binding OpenLogFileCommand}" />
                <Separator/>
                <MenuItem Header="E_xit" Click="ExitMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="_Theme">
                <MenuItem Header="Dark Mode" Command="{Binding Theme.SwitchToDarkCommand}" />
                <MenuItem Header="Light Mode" Command="{Binding Theme.SwitchToLightCommand}" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Undo" Command="{Binding UndoCommand}" InputGestureText="Ctrl+Z"/>
                <MenuItem Header="_Redo" Command="{Binding RedoCommand}" InputGestureText="Ctrl+Y"/>
            </MenuItem>
             <MenuItem Header="_Help">
                <MenuItem Header="_About Logonaut" Command="{Binding ToggleAboutOverlayCommand}"/>
             </MenuItem>
        </Menu>

        <!-- Main content area (Row 1) -->
        <!-- PARENT GRID FOR CONTENT + OVERLAY -->
        <Grid Grid.Row="1">

            <!-- CHILD 1: Grid that handles the COLUMNS for main content -->
            <Grid x:Name="MainContentColumnsGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" MinWidth="200"/>
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="3*" MinWidth="300"/>
                </Grid.ColumnDefinitions>

                <views:FilterPanelView Grid.Column="0"/>

                <GridSplitter Grid.Column="1"
                              Width="5"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Stretch"
                              Background="{DynamicResource BorderBrush}"
                              ShowsPreview="False"
                              ResizeDirection="Columns"
                              ResizeBehavior="PreviousAndNext"/>

                <!-- Right Panel: Log Display (Column 2 of MainContentColumnsGrid) -->
                <Grid Grid.Column="2">
                     <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <!-- Toolbar -->
                    <Border Grid.Row="0" Style="{DynamicResource CardPanelStyle}" Padding="5" Margin="5,5,5,0">
                        <WrapPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <CheckBox Content="Line Numbers" IsChecked="{Binding ShowLineNumbers}" VerticalAlignment="Center" ToolTip="Show or hide original line numbers" Margin="3"/>
                            <CheckBox Content="Highlight Timestamps" IsChecked="{Binding HighlightTimestamps}" VerticalAlignment="Center" ToolTip="Highlight timestamp patterns in log entries" Margin="3"/>
                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,2"/>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <TextBlock Text="Context Lines:" VerticalAlignment="Center" Margin="5,0,2,0"/>
                                <TextBox Text="{Binding ContextLines, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToIntConverter}}" Width="35" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="0,0,2,0">
                                    <TextBox.ToolTip><ToolTip>Enter the number of lines to show before and after a matched line (0 = none).</ToolTip></TextBox.ToolTip>
                                </TextBox>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                    <Button Content="▲" Command="{Binding IncrementContextLinesCommand}" Padding="3,0" Margin="0,0,0,1" FontSize="8" MinHeight="10" ToolTip="Increase Context Lines"/>
                                    <Button Content="▼" Command="{Binding DecrementContextLinesCommand}" Padding="3,0" Margin="0,1,0,0" FontSize="8" MinHeight="10" ToolTip="Decrease Context Lines"/>
                                </StackPanel>
                            </StackPanel>
                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,2"/>
                            <TextBlock Text="Font:" VerticalAlignment="Center" Margin="5,0,2,0"/>
                            <ComboBox ItemsSource="{Binding AvailableFontFamilies}"
                                      SelectedItem="{Binding EditorFontFamilyName, Mode=TwoWay}"
                                      Width="110" Margin="0,0,2,0" VerticalAlignment="Center"
                                      ToolTip="Select editor font family"/>
                            <ComboBox ItemsSource="{Binding AvailableFontSizes}"
                                      SelectedItem="{Binding EditorFontSize, Mode=TwoWay}"
                                      Width="55" VerticalAlignment="Center"
                                      ToolTip="Select editor font size"/>
                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,2"/>
                            <controls:BusyIndicator Width="16" Height="16" VerticalAlignment="Center" Margin="10,0,5,0" ActiveStates="{Binding CurrentBusyStates}" ToolTip="Applying filters or loading data..."/>
                            <TextBlock Text="{Binding SearchStatusText}" VerticalAlignment="Center" Margin="10,0,5,0" FontStyle="Italic" Foreground="{DynamicResource SecondaryTextBrush}"/>
                        </WrapPanel>
                    </Border>
                    <!-- Log Display Area -->
                    <Grid Grid.Row="1">
                        <Border Style="{DynamicResource CardPanelStyle}" Padding="5">
                            <avalonEdit:TextEditor x:Name="LogOutputEditor"
                                                FontFamily="Consolas" FontSize="12pt" IsReadOnly="True"
                                                SyntaxHighlighting="{x:Null}" WordWrap="False"
                                                VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto"
                                                Padding="3,0,0,0" Style="{StaticResource TextEditorWithOverviewRulerStyle}"
                                                helpers:AvalonEditHelper.FilterHighlightModels="{Binding FilterHighlightModels, Mode=OneWay}"
                                                helpers:AvalonEditHelper.HighlightTimestamps="{Binding HighlightTimestamps, Mode=OneWay}"
                                                ShowLineNumbers="False"
                                                helpers:AvalonEditHelper.SearchTerm="{Binding SearchText, Mode=OneWay}"
                                                helpers:AvalonEditHelper.SelectOffset="{Binding CurrentMatchOffset, Mode=OneWay}"
                                                helpers:AvalonEditHelper.SelectLength="{Binding CurrentMatchLength, Mode=OneWay}"/>
                        </Border>
                        <Border x:Name="LoadingOverlayContainer" Grid.Row="1" IsHitTestVisible="False" Width="{Binding ElementName=LogOutputEditor, Path=ActualWidth}" Height="{Binding ElementName=LogOutputEditor, Path=ActualHeight}" Visibility="{Binding IsLoading, Converter={StaticResource BoolToVis}}">
                            <controls:LoadingScanlineOverlay/>
                        </Border>
                    </Grid>
                    <!-- Search Panel -->
                    <Border Grid.Row="2" Style="{DynamicResource CardPanelStyle}" Padding="5" Margin="5,0,5,5">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Button Content="Previous" Command="{Binding PreviousSearchCommand}" Margin="5,0"/>
                            <TextBox x:Name="SearchTextBox" Width="250" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" Margin="5,0">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding DataContext.NextSearchCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                                </TextBox.InputBindings>
                            </TextBox>
                            <Button Content="Next" Command="{Binding NextSearchCommand}" Margin="5,0" />
                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0"/>
                            <CheckBox Content="Case Sensitive" IsChecked="{Binding IsCaseSensitiveSearch}" VerticalAlignment="Center" Margin="5,0">
                                <CheckBox.ToolTip><ToolTip>Match case when searching</ToolTip></CheckBox.ToolTip>
                            </CheckBox>
                        </StackPanel>
                    </Border>
                </Grid>

            </Grid> 

            <!-- About Overlay Border (Remains in MainWindow to overlay entire content) -->
            <Border x:Name="AboutOverlay"
                    Panel.ZIndex="20"
                    Background="{DynamicResource Overlay.BackgroundBrush}"
                    BorderBrush="{DynamicResource AccentBrush}"
                    BorderThickness="1" CornerRadius="5"
                    Padding="15" Margin="20"
                    Visibility="{Binding IsAboutOverlayVisible, Converter={StaticResource BoolToVis}}">
                
                <views:AboutView />
            </Border>

        </Grid> 

        <!-- Stats Bar (Row 2) -->
        <Border Grid.Row="2" Style="{DynamicResource CardPanelStyle}">
             <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock Margin="5,0,15,0" VerticalAlignment="Center" Foreground="{DynamicResource SecondaryTextBrush}">
                    <Run Text="Total Lines:"/>
                    <Run Text="{Binding TotalLogLines, Mode=OneWay}" FontWeight="Bold"/>
                    <Run Text="/ Filtered:"/>
                    <Run Text="{Binding FilteredLogLinesCount, Mode=OneWay}" FontWeight="Bold"/>
                </TextBlock>
                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0"/>
                <TextBlock Text="Selected line: " VerticalAlignment="Center" Margin="5,0,0,0"/>
                <TextBlock MinWidth="40" TextAlignment="Right" VerticalAlignment="Center" ToolTip="Original line number of selected line">
                     <TextBlock.Text>
                        <Binding Path="HighlightedOriginalLineNumber" Mode="OneWay">
                            <Binding.TargetNullValue><System:String>-</System:String></Binding.TargetNullValue>
                         </Binding>
                     </TextBlock.Text>
                </TextBlock>
                <TextBlock Text="Go To (CTRL+G):" VerticalAlignment="Center" Margin="10,0,3,0"/>
                <TextBox x:Name="JumpToLineTextBox" MinWidth="60" VerticalAlignment="Center" VerticalContentAlignment="Center" Text="{Binding TargetOriginalLineNumberInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings><KeyBinding Key="Enter" Command="{Binding JumpToLineCommand}"/></TextBox.InputBindings>
                     <i:Interaction.Triggers><i:EventTrigger EventName="LostFocus"/></i:Interaction.Triggers>
                     <TextBox.Style>
                         <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                             <Style.Triggers>
                                 <DataTrigger Binding="{Binding IsJumpTargetInvalid}" Value="True">
                                     <Setter Property="Background" Value="LightCoral"/>
                                 </DataTrigger>
                             </Style.Triggers>
                         </Style>
                     </TextBox.Style>
                </TextBox>
                <TextBlock Text="{Binding JumpStatusMessage}" Foreground="OrangeRed" VerticalAlignment="Center" Margin="5,0"/>
            </StackPanel>
        </Border>
    </Grid>
</Window>
