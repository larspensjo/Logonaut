<Window x:Class="Logonaut.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:helpers="clr-namespace:Logonaut.UI.Helpers"
        xmlns:vm="clr-namespace:Logonaut.UI.ViewModels"
        xmlns:converters="clr-namespace:Logonaut.UI.Converters"
        xmlns:local="clr-namespace:Logonaut.UI"
        xmlns:controls="clr-namespace:Logonaut.UI.Controls"
        xmlns:views="clr-namespace:Logonaut.UI.Views" 
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        Title="Logonaut" Height="600" Width="900"
        Closing="MainWindow_Closing"
        Style="{DynamicResource {x:Type Window}}">

    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="G" Command="{x:Static local:MainWindow.GoToLineBoxFocusCommand}"/>
        <!-- Ctrl+V is now handled by a CommandBinding for ApplicationCommands.Paste -->
        <!-- Ctrl+F binding for search is removed. This is now handled within TabView if needed. -->
        <KeyBinding Key="F3" Command="{Binding NextSearchCommand}" />
        <KeyBinding Key="F3" Modifiers="Shift" Command="{Binding PreviousSearchCommand}" />
        <KeyBinding Key="F12" Command="{x:Static local:MainWindow.ToggleSimulatorConfigCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="Z" Command="{Binding UndoCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="Y" Command="{Binding RedoCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding OpenLogFileCommand}"/>
    </Window.InputBindings>

    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVis"/>
        <converters:StringToIntConverter x:Key="StringToIntConverter" />
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:MainWindow.GoToLineBoxFocusCommand}"
                        Executed="GoToLineBoxFocus_Executed"
                        CanExecute="GoToLineBoxFocus_CanExecute"/>
        <CommandBinding Command="ApplicationCommands.Paste"
                        Executed="Paste_Executed"
                        CanExecute="Paste_CanExecute"/>
         <!-- CommandBinding for FocusSearchCommand is removed. -->
        <CommandBinding Command="{x:Static local:MainWindow.ToggleSimulatorConfigCommand}"
                        Executed="ToggleSimulatorConfig_Executed"
                        CanExecute="ToggleSimulatorConfig_CanExecute"/>
    </Window.CommandBindings>

    <Grid> 
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- Menu -->
            <RowDefinition Height="*"/>    <!-- Main Content Area -->
            <RowDefinition Height="Auto"/> <!-- Status Bar -->
        </Grid.RowDefinitions>

        <!-- Menu (Row 0) -->
        <Menu Grid.Row="0">
            <MenuItem Header="_File">
                <MenuItem Header="Open Log File" Command="{Binding OpenLogFileCommand}" />
                <Separator/>
                <MenuItem Header="E_xit" Click="ExitMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="_Theme">
                <MenuItem Header="Dark Mode" Command="{Binding Theme.SwitchToDarkCommand}" />
                <MenuItem Header="Light Mode" Command="{Binding Theme.SwitchToLightCommand}" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Undo" Command="{Binding UndoCommand}" InputGestureText="Ctrl+Z"/>
                <MenuItem Header="_Redo" Command="{Binding RedoCommand}" InputGestureText="Ctrl+Y"/>
            </MenuItem>
             <MenuItem Header="_Help">
                <MenuItem Header="_About Logonaut" Command="{Binding ToggleAboutOverlayCommand}"/>
             </MenuItem>
        </Menu>

        <!-- Main content area (Row 1) -->
        <Grid Grid.Row="1">

            <Grid x:Name="MainContentColumnsGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" MinWidth="200"/>
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="3*" MinWidth="300"/>
                </Grid.ColumnDefinitions>

                <views:FilterPanelView Grid.Column="0"/>

                <GridSplitter Grid.Column="1"
                              Width="5"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Stretch"
                              Background="{DynamicResource BorderBrush}"
                              ShowsPreview="False"
                              ResizeDirection="Columns"
                              ResizeBehavior="PreviousAndNext"/>

                <Grid Grid.Column="2">
                     <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <Border Grid.Row="0" Style="{DynamicResource CardPanelStyle}" Padding="5" Margin="5,5,5,0">
                        <WrapPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <CheckBox Content="Line Numbers" IsChecked="{Binding ShowLineNumbers}" VerticalAlignment="Center" ToolTip="Show or hide original line numbers" Margin="3"/>
                            <CheckBox Content="Highlight Timestamps" IsChecked="{Binding HighlightTimestamps}" VerticalAlignment="Center" ToolTip="Highlight timestamp patterns in log entries" Margin="3"/>
                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,2"/>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <TextBlock Text="Context Lines:" VerticalAlignment="Center" Margin="5,0,2,0"/>
                                <TextBox Text="{Binding ContextLines, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToIntConverter}}" Width="35" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="0,0,2,0">
                                    <TextBox.ToolTip><ToolTip>Enter the number of lines to show before and after a matched line (0 = none).</ToolTip></TextBox.ToolTip>
                                </TextBox>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                    <Button Content="▲" Command="{Binding IncrementContextLinesCommand}" Padding="3,0" Margin="0,0,0,1" FontSize="8" MinHeight="10" ToolTip="Increase Context Lines"/>
                                    <Button Content="▼" Command="{Binding DecrementContextLinesCommand}" Padding="3,0" Margin="0,1,0,0" FontSize="8" MinHeight="10" ToolTip="Decrease Context Lines"/>
                                </StackPanel>
                            </StackPanel>
                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,2"/>
                            <TextBlock Text="Font:" VerticalAlignment="Center" Margin="5,0,2,0"/>
                            <ComboBox ItemsSource="{Binding AvailableFontFamilies}"
                                      SelectedItem="{Binding EditorFontFamilyName, Mode=TwoWay}"
                                      Width="110" Margin="0,0,2,0" VerticalAlignment="Center"
                                      ToolTip="Select editor font family"/>
                            <ComboBox ItemsSource="{Binding AvailableFontSizes}"
                                      SelectedItem="{Binding EditorFontSize, Mode=TwoWay}"
                                      Width="55" VerticalAlignment="Center"
                                      ToolTip="Select editor font size"/>
                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,2"/>
                            <controls:BusyIndicator Width="16" Height="16" VerticalAlignment="Center" Margin="10,0,5,0" ActiveStates="{Binding CurrentBusyStates}" ToolTip="Applying filters or loading data..."/>
                        </WrapPanel>
                    </Border>
                    
                    <TabControl Grid.Row="1" Margin="5,0,5,5"
                                ItemsSource="{Binding TabViewModels}"
                                SelectedItem="{Binding ActiveTabViewModel, Mode=TwoWay}">
                        
                        <TabControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type vm:TabViewModel}">
                                <TextBlock Text="{Binding DisplayHeader}" Padding="5,2"/>
                            </DataTemplate>
                        </TabControl.ItemTemplate>
                        
                        <TabControl.ContentTemplate>
                            <DataTemplate DataType="{x:Type vm:TabViewModel}">
                                <views:TabView/>
                            </DataTemplate>
                        </TabControl.ContentTemplate>
                        
                    </TabControl>

                </Grid>

            </Grid> 

            <Border x:Name="AboutOverlay"
                    Panel.ZIndex="20"
                    Background="{DynamicResource Overlay.BackgroundBrush}"
                    BorderBrush="{DynamicResource AccentBrush}"
                    BorderThickness="1" CornerRadius="5"
                    Padding="15" Margin="20"
                    Visibility="{Binding IsAboutOverlayVisible, Converter={StaticResource BoolToVis}}">
                
                <views:AboutView />
            </Border>

        </Grid> 

        <Border Grid.Row="2" Style="{DynamicResource CardPanelStyle}">
             <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock Margin="5,0,15,0" VerticalAlignment="Center" Foreground="{DynamicResource SecondaryTextBrush}">
                    <Run Text="Total Lines:"/>
                    <Run Text="{Binding TotalLogLines, Mode=OneWay}" FontWeight="Bold"/>
                    <Run Text="/ Filtered:"/>
                    <Run Text="{Binding FilteredLogLinesCount, Mode=OneWay}" FontWeight="Bold"/>
                </TextBlock>
                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0"/>
                <TextBlock Text="Selected line: " VerticalAlignment="Center" Margin="5,0,0,0"/>
                <TextBlock MinWidth="40" TextAlignment="Right" VerticalAlignment="Center" ToolTip="Original line number of selected line">
                     <TextBlock.Text>
                        <Binding Path="HighlightedOriginalLineNumber" Mode="OneWay">
                            <Binding.TargetNullValue><System:String>-</System:String></Binding.TargetNullValue>
                         </Binding>
                     </TextBlock.Text>
                </TextBlock>
                <TextBlock Text="Go To (CTRL+G):" VerticalAlignment="Center" Margin="10,0,3,0"/>
                <TextBox x:Name="JumpToLineTextBox" MinWidth="60" VerticalAlignment="Center" VerticalContentAlignment="Center" Text="{Binding TargetOriginalLineNumberInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings><KeyBinding Key="Enter" Command="{Binding JumpToLineCommand}"/></TextBox.InputBindings>
                     <i:Interaction.Triggers><i:EventTrigger EventName="LostFocus"/></i:Interaction.Triggers>
                     <TextBox.Style>
                         <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                             <Style.Triggers>
                                 <DataTrigger Binding="{Binding IsJumpTargetInvalid}" Value="True">
                                     <Setter Property="Background" Value="LightCoral"/>
                                 </DataTrigger>
                             </Style.Triggers>
                         </Style>
                     </TextBox.Style>
                </TextBox>
                <TextBlock Text="{Binding JumpStatusMessage}" Foreground="OrangeRed" VerticalAlignment="Center" Margin="5,0"/>
            </StackPanel>
        </Border>
    </Grid>
</Window>
