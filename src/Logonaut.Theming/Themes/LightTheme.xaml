<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Define Light Theme Colors -->
    <Color x:Key="BackgroundColor">#FFFFFF</Color>  <!-- White -->
    <Color x:Key="ForegroundColor">#000000</Color>  <!-- Black text -->
    <Color x:Key="ControlBackground">#F0F0F0</Color> <!-- Light gray -->
    <Color x:Key="PanelBackgroundColor">#ECECEC</Color> <!-- Panel background -->
    <Color x:Key="ButtonBackground">#DDDDDD</Color>
    <Color x:Key="ButtonForeground">#000000</Color>
    <Color x:Key="AccentColor">#FF007ACC</Color> <!-- Same accent color for consistency -->

    <!-- Brushes -->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource BackgroundColor}"/>
    <SolidColorBrush x:Key="TextForegroundBrush" Color="{StaticResource ForegroundColor}"/>
    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="{StaticResource ControlBackground}"/>
    <SolidColorBrush x:Key="PanelBackgroundBrush" Color="{StaticResource PanelBackgroundColor}"/>
    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{StaticResource ButtonBackground}"/>
    <SolidColorBrush x:Key="ButtonForegroundBrush" Color="{StaticResource ButtonForeground}"/>
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>

    <!-- Global Styles -->
    <Style TargetType="Window">
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextForegroundBrush}"/>
    </Style>

    <!-- Button Style with Rounded Corners & Accent Border -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <!-- Outer border with drop shadow -->
                    <Border x:Name="ButtonBorder"
                            CornerRadius="8"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        
                        <!-- Example: Simple gradient background to accentuate 3D effect -->
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0.0" Color="#FF444444" />
                                <GradientStop Offset="1.0" Color="{TemplateBinding Background}" />
                            </LinearGradientBrush>
                        </Border.Background>

	                    <!-- Subtle DropShadowEffect for a light 3D look -->
	                    <Border.Effect>
	                        <DropShadowEffect Color="#888888"
	                                          BlurRadius="8"
	                                          ShadowDepth="3"
	                                          Opacity="0.2" />
	                    </Border.Effect>

	                    <ContentPresenter HorizontalAlignment="Center"
	                                      VerticalAlignment="Center"
	                                      RecognizesAccessKey="True" />
	                </Border>
	                <!-- Triggers for hover and pressed states -->
	                <ControlTemplate.Triggers>
	                    <Trigger Property="IsMouseOver" Value="True">
	                        <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource AccentBrush}" />
	                        <Setter TargetName="ButtonBorder" Property="Cursor" Value="Hand" />
	                    </Trigger>
	                    <Trigger Property="IsPressed" Value="True">
	                        <Setter TargetName="ButtonBorder" Property="Background" Value="#FFE0E0E0" />
	                        <Setter TargetName="ButtonBorder" Property="Effect">
	                            <Setter.Value>
	                                <DropShadowEffect Color="#888888"
	                                                  BlurRadius="10"
	                                                  ShadowDepth="1"
	                                                  Opacity="0.3" />
	                            </Setter.Value>
	                        </Setter>
	                    </Trigger>
	                </ControlTemplate.Triggers>
	            </ControlTemplate>
	        </Setter.Value>
	    </Setter>
	</Style>

    <!-- A style for group containers (e.g., Border) that should appear as a 3D “card.” -->
    <Style x:Key="CardPanelStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="Background" Value="{StaticResource PanelBackgroundBrush}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="#000000"
                                BlurRadius="10"
                                ShadowDepth="4"
                                Opacity="0.6" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for the Menu control (the menu bar itself) -->
    <Style TargetType="Menu" x:Key="CustomMenuStyle">
        <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextForegroundBrush}" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Menu">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="8"
                            BorderBrush="{StaticResource AccentBrush}"
                            BorderThickness="1">
                        <Border.Effect>
                            <DropShadowEffect Color="#888888"
                                            BlurRadius="8"
                                            ShadowDepth="3"
                                            Opacity="0.2" />
                        </Border.Effect>
                        <!-- The ItemsPresenter displays the menu items horizontally -->
                        <ItemsPresenter HorizontalAlignment="Left" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for top-level MenuItems -->
    <Style TargetType="MenuItem" x:Key="CustomTopLevelMenuItemStyle">
        <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextForegroundBrush}" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid>
                        <!-- The main header -->
                        <Border x:Name="HeaderBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                BorderBrush="{StaticResource AccentBrush}"
                                BorderThickness="1">
                            <ContentPresenter ContentSource="Header"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            RecognizesAccessKey="True" />
                        </Border>
                        <!-- Popup for submenu items -->
                        <Popup x:Name="SubMenuPopup"
                            Placement="Bottom"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsSubmenuOpen}"
                            PlacementTarget="{Binding ElementName=HeaderBorder}">
                            <Border Background="{StaticResource ControlBackgroundBrush}"
                                    CornerRadius="4"
                                    BorderBrush="{StaticResource AccentBrush}"
                                    BorderThickness="1">
                                <StackPanel IsItemsHost="True" />
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource AccentBrush}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for sub-level MenuItems -->
    <Style TargetType="MenuItem" x:Key="CustomSubMenuItemStyle">
        <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextForegroundBrush}" />
        <Setter Property="Padding" Value="6,2" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            BorderBrush="{StaticResource AccentBrush}"
                            BorderThickness="1">
                        <ContentPresenter ContentSource="Header"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        RecognizesAccessKey="True"
                                        Margin="4,2" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrush}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextForegroundBrush}"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextForegroundBrush}"/>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextForegroundBrush}"/>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
    </Style>

    <Style TargetType="StackPanel">
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
    </Style>

    <Style TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
    </Style>

    <Style TargetType="TreeView">
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextForegroundBrush}"/>
    </Style>

    <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
